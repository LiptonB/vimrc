
set autowrite                  " automatically write a file when leaving a modified buffer
set encoding=utf-8
set textwidth=80
set colorcolumn=+1
set foldcolumn=1
set numberwidth=4
set conceallevel=2
set concealcursor=nc

let g:session_autoload=1
let g:session_autosave=1
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_start_level=1
let g:indent_guides_guide_size=0
let g:indent_guides_auto_colors=0
let g:indent_guides_color_change_percent=10
let g:syntax_js=['function', 'this', 'return', 'comma', 'semicolon']

colorscheme jason

let g:javascript_conceal=1
let g:syntastic_error_symbol='⚑'
let g:syntastic_warning_symbol='⚠'
let g:syntastic_style_error_symbol='¿'
let g:syntastic_style_warning_symbol='⸮'

sign define QFS_VCS_CHANGE text=≠ texthl=DiffChange

nnoremap ; :

nmap <leader>c :VimChat <CR>
nmap <leader>t :FriendsTwitter<CR>

" Add mapping for moving between windows with ALT-<arrow keys> "
nmap <silent> <A-Up>    :wincmd k<CR>
nmap <silent> <A-Down>  :wincmd j<CR>
nmap <silent> <A-Left>  :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>
noremap <silent> <c-y> :call smooth_scroll#down(&scroll, 0, 2)<CR>
noremap <silent> <c-d> :call smooth_scroll#up(&scroll*2, 0, 4)<CR>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 0, 4)<CR>

" Switching to buffer 1 - 9 is mapped to <Leader> [Buffer number]
for buffer_no in range(1, 9)
  execute "nmap <Leader>" . buffer_no . " :b" . buffer_no . "\<CR>"
endfor

nnoremap <silent> gb :exe('!w3m "'.expand('<cfile>').'"')<CR>

function! ZenMode()
    set spell wrap autoindent linebreak
    set nonumber norelativenumber nolist nocursorline
    set textwidth=0 foldcolumn=0 wrapmargin=0 laststatus=0
    highlight NonText ctermfg=233 ctermbg=none
    highlight! link FoldColumn Normal
    highlight! link ColorColumn Normal
    autocmd InsertEnter * :set nonumber
    autocmd InsertLeave * :set norelativenumber
    :UniCycleOn
    :QuickfixsignsDisable
    silent !tmux set status off
endfunction

command! -nargs=* Zen call ZenMode()

nnoremap <S-U> :GundoToggle<CR>

function! g:UltiSnips_Complete()
    call UltiSnips_ExpandSnippet()
    if g:ulti_expand_res == 0
        if pumvisible()
            return "\<C-n>"
        else
            call UltiSnips_JumpForwards()
            if g:ulti_jump_forwards_res == 0
               return "\<TAB>"
            endif
        endif
    endif
    return ""
endfunction

au BufEnter * exec "inoremap <silent> " . g:UltiSnipsExpandTrigger . " <C-R>=g:UltiSnips_Complete()<cr>"

nnoremap [unite] <Nop>
nmap     <space> [unite]

let g:unite_source_history_yank_enable = 1
call unite#filters#matcher_default#use(['matcher_fuzzy'])

nnoremap <silent> [unite]<space> :<C-u>Unite -buffer-name=mixed    file_rec/async buffer file_mru bookmark -auto-resize -toggle <cr><c-u>
nnoremap <silent> [unite]f       :<C-u>Unite -buffer-name=files    file_rec/async -auto-resize -toggle -start-insert <cr><c-u>
nnoremap <silent> [unite]l       :<C-u>Unite -buffer-name=line     line           -auto-resize <cr>
nnoremap <silent> [unite]b       :<C-u>Unite -buffer-name=buffers  buffer         -auto-resize <cr>
nnoremap <silent> [unite]t       :<C-u>Unite -buffer-name=tags     tags tags/file -auto-resize <cr>
nnoremap <silent> [unite]o       :<C-u>Unite -buffer-name=outline  outline        -auto-resize <cr>
nnoremap <silent> [unite]m       :<C-u>Unite -buffer-name=mapping  mapping        -auto-resize <cr>
nnoremap <silent> [unite]r       :<C-u>Unite -buffer-name=register register<cr>
nnoremap <silent> [unite]y       :<C-u>Unite -buffer-name=yanks    history/yank<cr>
nnoremap <silent> [unite]d       :<C-u>Unite -buffer-name=files -default-action=lcd directory_mru<cr>
nnoremap <silent> [unite]/       :<C-u>Unite -no-quit -buffer-name=search grep:.<cr>
nnoremap <silent> [unite]s       :<C-u>Unite -quick-match buffer<cr>
nnoremap <silent> [unite]ma      :<C-u>Unite mapping<cr>
nnoremap <silent> [unite]me      :<C-u>Unite output:message<cr>
nnoremap <silent> [unite]c       :<C-u>UniteWithCurrentDir -buffer-name=files buffer file_mru bookmark file<cr>

